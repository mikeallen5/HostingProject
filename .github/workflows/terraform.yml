name: 'Terraform'

on:
  push:
    branches:
    - main
    paths:
    - 'terraform/**'

jobs:
  terraform_plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}; export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}; cd terraform/environments/development; terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}; export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}; cd terraform/environments/development; terraform plan
  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
 
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}; export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}; cd terraform/environments/development; terraform init

    # Applies Terraform
    - name: Terraform Apply
      run: export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}; export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}; cd terraform/environments/development; terraform apply -auto-approve
